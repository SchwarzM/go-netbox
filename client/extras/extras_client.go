// Code generated by go-swagger; DO NOT EDIT.

package extras

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new extras API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for extras API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
ExtrasChoicesList extras choices list API
*/
func (a *Client) ExtrasChoicesList(params *ExtrasChoicesListParams) (*ExtrasChoicesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtrasChoicesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extras__choices_list",
		Method:             "GET",
		PathPattern:        "/api/extras/_choices/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtrasChoicesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ExtrasChoicesListOK), nil

}

/*
ExtrasChoicesRead extras choices read API
*/
func (a *Client) ExtrasChoicesRead(params *ExtrasChoicesReadParams) (*ExtrasChoicesReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtrasChoicesReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extras__choices_read",
		Method:             "GET",
		PathPattern:        "/api/extras/_choices/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtrasChoicesReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ExtrasChoicesReadOK), nil

}

/*
ExtrasExportTemplatesList extras export templates list API
*/
func (a *Client) ExtrasExportTemplatesList(params *ExtrasExportTemplatesListParams) (*ExtrasExportTemplatesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtrasExportTemplatesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extras_export-templates_list",
		Method:             "GET",
		PathPattern:        "/api/extras/export-templates/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtrasExportTemplatesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ExtrasExportTemplatesListOK), nil

}

/*
ExtrasExportTemplatesRead extras export templates read API
*/
func (a *Client) ExtrasExportTemplatesRead(params *ExtrasExportTemplatesReadParams) (*ExtrasExportTemplatesReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtrasExportTemplatesReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extras_export-templates_read",
		Method:             "GET",
		PathPattern:        "/api/extras/export-templates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtrasExportTemplatesReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ExtrasExportTemplatesReadOK), nil

}

/*
ExtrasGraphsList extras graphs list API
*/
func (a *Client) ExtrasGraphsList(params *ExtrasGraphsListParams) (*ExtrasGraphsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtrasGraphsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extras_graphs_list",
		Method:             "GET",
		PathPattern:        "/api/extras/graphs/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtrasGraphsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ExtrasGraphsListOK), nil

}

/*
ExtrasGraphsRead extras graphs read API
*/
func (a *Client) ExtrasGraphsRead(params *ExtrasGraphsReadParams) (*ExtrasGraphsReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtrasGraphsReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extras_graphs_read",
		Method:             "GET",
		PathPattern:        "/api/extras/graphs/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtrasGraphsReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ExtrasGraphsReadOK), nil

}

/*
ExtrasImageAttachmentsList extras image attachments list API
*/
func (a *Client) ExtrasImageAttachmentsList(params *ExtrasImageAttachmentsListParams) (*ExtrasImageAttachmentsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtrasImageAttachmentsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extras_image-attachments_list",
		Method:             "GET",
		PathPattern:        "/api/extras/image-attachments/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtrasImageAttachmentsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ExtrasImageAttachmentsListOK), nil

}

/*
ExtrasImageAttachmentsRead extras image attachments read API
*/
func (a *Client) ExtrasImageAttachmentsRead(params *ExtrasImageAttachmentsReadParams) (*ExtrasImageAttachmentsReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtrasImageAttachmentsReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extras_image-attachments_read",
		Method:             "GET",
		PathPattern:        "/api/extras/image-attachments/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtrasImageAttachmentsReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ExtrasImageAttachmentsReadOK), nil

}

/*
ExtrasRecentActivityList lists all user actions to provide a log of recent activity

List all UserActions to provide a log of recent activity.
*/
func (a *Client) ExtrasRecentActivityList(params *ExtrasRecentActivityListParams) (*ExtrasRecentActivityListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtrasRecentActivityListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extras_recent-activity_list",
		Method:             "GET",
		PathPattern:        "/api/extras/recent-activity/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtrasRecentActivityListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ExtrasRecentActivityListOK), nil

}

/*
ExtrasRecentActivityRead lists all user actions to provide a log of recent activity

List all UserActions to provide a log of recent activity.
*/
func (a *Client) ExtrasRecentActivityRead(params *ExtrasRecentActivityReadParams) (*ExtrasRecentActivityReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtrasRecentActivityReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extras_recent-activity_read",
		Method:             "GET",
		PathPattern:        "/api/extras/recent-activity/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtrasRecentActivityReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ExtrasRecentActivityReadOK), nil

}

/*
ExtrasTopologyMapsList extras topology maps list API
*/
func (a *Client) ExtrasTopologyMapsList(params *ExtrasTopologyMapsListParams) (*ExtrasTopologyMapsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtrasTopologyMapsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extras_topology-maps_list",
		Method:             "GET",
		PathPattern:        "/api/extras/topology-maps/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtrasTopologyMapsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ExtrasTopologyMapsListOK), nil

}

/*
ExtrasTopologyMapsRead extras topology maps read API
*/
func (a *Client) ExtrasTopologyMapsRead(params *ExtrasTopologyMapsReadParams) (*ExtrasTopologyMapsReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtrasTopologyMapsReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extras_topology-maps_read",
		Method:             "GET",
		PathPattern:        "/api/extras/topology-maps/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtrasTopologyMapsReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ExtrasTopologyMapsReadOK), nil

}

/*
ExtrasTopologyMapsRender extras topology maps render API
*/
func (a *Client) ExtrasTopologyMapsRender(params *ExtrasTopologyMapsRenderParams) (*ExtrasTopologyMapsRenderOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExtrasTopologyMapsRenderParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "extras_topology-maps_render",
		Method:             "GET",
		PathPattern:        "/api/extras/topology-maps/{id}/render/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ExtrasTopologyMapsRenderReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*ExtrasTopologyMapsRenderOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
