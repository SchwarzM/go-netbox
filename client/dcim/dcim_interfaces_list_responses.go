// Code generated by go-swagger; DO NOT EDIT.

package dcim

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DcimInterfacesListReader is a Reader for the DcimInterfacesList structure.
type DcimInterfacesListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DcimInterfacesListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDcimInterfacesListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDcimInterfacesListOK creates a DcimInterfacesListOK with default headers values
func NewDcimInterfacesListOK() *DcimInterfacesListOK {
	return &DcimInterfacesListOK{}
}

/*DcimInterfacesListOK handles this case with default header values.

DcimInterfacesListOK dcim interfaces list o k
*/
type DcimInterfacesListOK struct {
}

func (o *DcimInterfacesListOK) Error() string {
	return fmt.Sprintf("[GET /api/dcim/interfaces/][%d] dcimInterfacesListOK ", 200)
}

func (o *DcimInterfacesListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
