// Code generated by go-swagger; DO NOT EDIT.

package dcim

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDcimRegionsReadParams creates a new DcimRegionsReadParams object
// with the default values initialized.
func NewDcimRegionsReadParams() *DcimRegionsReadParams {
	var ()
	return &DcimRegionsReadParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDcimRegionsReadParamsWithTimeout creates a new DcimRegionsReadParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDcimRegionsReadParamsWithTimeout(timeout time.Duration) *DcimRegionsReadParams {
	var ()
	return &DcimRegionsReadParams{

		timeout: timeout,
	}
}

// NewDcimRegionsReadParamsWithContext creates a new DcimRegionsReadParams object
// with the default values initialized, and the ability to set a context for a request
func NewDcimRegionsReadParamsWithContext(ctx context.Context) *DcimRegionsReadParams {
	var ()
	return &DcimRegionsReadParams{

		Context: ctx,
	}
}

// NewDcimRegionsReadParamsWithHTTPClient creates a new DcimRegionsReadParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDcimRegionsReadParamsWithHTTPClient(client *http.Client) *DcimRegionsReadParams {
	var ()
	return &DcimRegionsReadParams{
		HTTPClient: client,
	}
}

/*DcimRegionsReadParams contains all the parameters to send to the API endpoint
for the dcim regions read operation typically these are written to a http.Request
*/
type DcimRegionsReadParams struct {

	/*ID
	  A unique integer value identifying this region.

	*/
	ID int64
	/*Name*/
	Name *string
	/*Parent*/
	Parent *string
	/*ParentID*/
	ParentID *string
	/*Slug*/
	Slug *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the dcim regions read params
func (o *DcimRegionsReadParams) WithTimeout(timeout time.Duration) *DcimRegionsReadParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the dcim regions read params
func (o *DcimRegionsReadParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the dcim regions read params
func (o *DcimRegionsReadParams) WithContext(ctx context.Context) *DcimRegionsReadParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the dcim regions read params
func (o *DcimRegionsReadParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the dcim regions read params
func (o *DcimRegionsReadParams) WithHTTPClient(client *http.Client) *DcimRegionsReadParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the dcim regions read params
func (o *DcimRegionsReadParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the dcim regions read params
func (o *DcimRegionsReadParams) WithID(id int64) *DcimRegionsReadParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the dcim regions read params
func (o *DcimRegionsReadParams) SetID(id int64) {
	o.ID = id
}

// WithName adds the name to the dcim regions read params
func (o *DcimRegionsReadParams) WithName(name *string) *DcimRegionsReadParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the dcim regions read params
func (o *DcimRegionsReadParams) SetName(name *string) {
	o.Name = name
}

// WithParent adds the parent to the dcim regions read params
func (o *DcimRegionsReadParams) WithParent(parent *string) *DcimRegionsReadParams {
	o.SetParent(parent)
	return o
}

// SetParent adds the parent to the dcim regions read params
func (o *DcimRegionsReadParams) SetParent(parent *string) {
	o.Parent = parent
}

// WithParentID adds the parentID to the dcim regions read params
func (o *DcimRegionsReadParams) WithParentID(parentID *string) *DcimRegionsReadParams {
	o.SetParentID(parentID)
	return o
}

// SetParentID adds the parentId to the dcim regions read params
func (o *DcimRegionsReadParams) SetParentID(parentID *string) {
	o.ParentID = parentID
}

// WithSlug adds the slug to the dcim regions read params
func (o *DcimRegionsReadParams) WithSlug(slug *string) *DcimRegionsReadParams {
	o.SetSlug(slug)
	return o
}

// SetSlug adds the slug to the dcim regions read params
func (o *DcimRegionsReadParams) SetSlug(slug *string) {
	o.Slug = slug
}

// WriteToRequest writes these params to a swagger request
func (o *DcimRegionsReadParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	if o.Parent != nil {

		// query param parent
		var qrParent string
		if o.Parent != nil {
			qrParent = *o.Parent
		}
		qParent := qrParent
		if qParent != "" {
			if err := r.SetQueryParam("parent", qParent); err != nil {
				return err
			}
		}

	}

	if o.ParentID != nil {

		// query param parent_id
		var qrParentID string
		if o.ParentID != nil {
			qrParentID = *o.ParentID
		}
		qParentID := qrParentID
		if qParentID != "" {
			if err := r.SetQueryParam("parent_id", qParentID); err != nil {
				return err
			}
		}

	}

	if o.Slug != nil {

		// query param slug
		var qrSlug string
		if o.Slug != nil {
			qrSlug = *o.Slug
		}
		qSlug := qrSlug
		if qSlug != "" {
			if err := r.SetQueryParam("slug", qSlug); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
